#include <ThingSpeak.h>
#include <ESP8266WiFi.h>
char ssid[] = "POCO"; //SSID
char pass[] = "abcd1234";// Password
const int total_height = 30; // garbage bin height in CM
const int hold_height = 25;// garbage holding capacity (height) in CMint Minute = 1;
unsigned long Channel_ID = 1933694; // Channel ID
const char * WriteAPIKey = "4OPY3U4NB3OZKMUW"; // Your write API Key// ----------------------------------------//
const int trigger = 12;
const int echo = 14;
long Time;
int x;s
int i;
int distanceCM;
int resultCM;
int bin_lvl = 0;
int snsr_to_max = 0;
const int Field_number = 1;
WiFiClient client;
void setup() {
// put your setup code here, to run once:
Serial.begin(115200);
pinMode(trigger, OUTPUT);
pinMode(echo, INPUT);
pinMode(D2,OUTPUT);
WiFi.mode(WIFI_STA);
ThingSpeak.begin(client);
snsr_to_max = total_height - hold_height;
delay(2500);
}
void loop()
{
internet();
measure();
// for (i = 0; i < Minute; i++)
// {
// Serial.println("-------------------------");
// Serial.println("System Standby....");
// Serial.print(i);
// Serial.println(" Minutes elapsed.");
// delay(20000);
// delay(20000);
// delay(20000);
// }
delay(20000);
upload();
}
void upload()
{
//internet();
measure();
x = ThingSpeak.writeField(Channel_ID, Field_number, bin_lvl, WriteAPIKey);
if (x == 200)Serial.println("Data Updated.");
if (x != 200)
{
Serial.println("Data upload failed, retrying....");
delay(15000);
upload();
}
}
void measure()
{
delay(100);
digitalWrite(trigger, HIGH);
delayMicroseconds(10);
digitalWrite(trigger, LOW);
Time = pulseIn(echo, HIGH);
distanceCM = Time * 0.034;
resultCM = distanceCM / 2;
bin_lvl = map(resultCM, snsr_to_max, total_height, 100, 0);
if (bin_lvl > 100) bin_lvl = 100;
if (bin_lvl < 0) bin_lvl = 0;
Serial.println(bin_lvl);
Serial.println(resultCM);
if(bin_lvl>90)
{
digitalWrite(D2,HIGH);
}
else
{
digitalWrite(D2,LOW);
}
}
void internet()
{
if (WiFi.status() != WL_CONNECTED)
{
Serial.print("Attempting to connect to SSID: ");
Serial.println(ssid);
while (WiFi.status() != WL_CONNECTED)
{
WiFi.begin(ssid, pass);
Serial.print(".");
delay(5000);
}
Serial.println("\nConnected.");
}
}